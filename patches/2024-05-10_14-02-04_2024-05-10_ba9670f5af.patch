From ba9670f5af0de43674111ab6cbfa88cb54c307d7 Mon Sep 17 00:00:00 2001
From: Brecht Van Lommel <brecht@blender.org>
Date: Fri, 10 May 2024 14:02:04 +0200
Subject: [PATCH] BLENDER: Lazy pull request checking

Delay conflict checking of PRs that had no update in last 24h until page load.
This solves the problem where after every commit to main, it takes a long time
for conflict checking to update as it goes through many old PRs.
---
 routers/web/repo/issue.go |  3 +++
 services/pull/check.go    | 55 ++++++++++++++++++++++++++++++++++++---
 services/pull/pull.go     |  2 +-
 3 files changed, 56 insertions(+), 4 deletions(-)

diff --git a/routers/web/repo/issue.go b/routers/web/repo/issue.go
index 6cfc22566ad70..cb233b787a690 100644
--- a/routers/web/repo/issue.go
+++ b/routers/web/repo/issue.go
@@ -1793,6 +1793,9 @@ func ViewIssue(ctx *context.Context) {
 		allowMerge := false
 		canWriteToHeadRepo := false

+		// BLENDER: Lazy conflict checking
+		pull_service.AddToTaskQueueOnView(ctx, pull)
+
 		if ctx.IsSigned {
 			if err := pull.LoadHeadRepo(ctx); err != nil {
 				log.Error("LoadHeadRepo: %v", err)
diff --git a/services/pull/check.go b/services/pull/check.go
index 7d93ff7a8a4b2..62e37a03d8fbe 100644
--- a/services/pull/check.go
+++ b/services/pull/check.go
@@ -10,6 +10,7 @@ import (
 	"fmt"
 	"strconv"
 	"strings"
+	"time"

 	"code.gitea.io/gitea/models"
 	"code.gitea.io/gitea/models/db"
@@ -44,20 +45,61 @@ var (
 )

 // AddToTaskQueue adds itself to pull request test task queue.
-func AddToTaskQueue(ctx context.Context, pr *issues_model.PullRequest) {
+func setStatusChecking(ctx context.Context, pr *issues_model.PullRequest) bool {
 	pr.Status = issues_model.PullRequestStatusChecking
 	err := pr.UpdateColsIfNotMerged(ctx, "status")
 	if err != nil {
 		log.Error("AddToTaskQueue(%-v).UpdateCols.(add to queue): %v", pr, err)
-		return
+		return false
 	}
+	return true
+}
+
+func addToTaskQueue(pr *issues_model.PullRequest) {
 	log.Trace("Adding %-v to the test pull requests queue", pr)
-	err = prPatchCheckerQueue.Push(strconv.FormatInt(pr.ID, 10))
+	err := prPatchCheckerQueue.Push(strconv.FormatInt(pr.ID, 10))
 	if err != nil && err != queue.ErrAlreadyInQueue {
 		log.Error("Error adding %-v to the test pull requests queue: %v", pr, err)
 	}
 }

+func checkPRUpdate(ctx context.Context, pr *issues_model.PullRequest) bool {
+	if err := pr.LoadIssue(ctx); err != nil {
+		return false
+	}
+	if pr.Issue.UpdatedUnix.AddDuration(24*time.Hour) < timeutil.TimeStampNow() {
+		log.Trace("Delaying %-v patch checking because it was not updated recently", pr)
+		return false
+	}
+
+	return true
+}
+
+func AddToTaskQueueOnView(ctx context.Context, pr *issues_model.PullRequest) {
+	if pr.Status == issues_model.PullRequestStatusChecking {
+		addToTaskQueue(pr)
+	}
+}
+
+func AddToTaskQueueOnBaseUpdate(ctx context.Context, pr *issues_model.PullRequest) {
+	// Blender: don't immediately check PRs older than a week, instead check when
+	// the page is loaded.
+	if !setStatusChecking(ctx, pr) {
+		return
+	}
+	if !checkPRUpdate(ctx, pr) {
+		return
+	}
+
+	addToTaskQueue(pr)
+}
+
+func AddToTaskQueue(ctx context.Context, pr *issues_model.PullRequest) {
+	if setStatusChecking(ctx, pr) {
+		addToTaskQueue(pr)
+	}
+}
+
 type MergeCheckType int

 const (
@@ -316,6 +358,13 @@ func InitializePullRequests(ctx context.Context) {
 		case <-ctx.Done():
 			return
 		default:
+			pr, err := issues_model.GetPullRequestByID(ctx, prID)
+			if err != nil {
+				continue
+			}
+			if !checkPRUpdate(ctx, pr) {
+				continue
+			}
 			log.Trace("Adding PR[%d] to the pull requests patch checking queue", prID)
 			if err := prPatchCheckerQueue.Push(strconv.FormatInt(prID, 10)); err != nil {
 				log.Error("Error adding PR[%d] to the pull requests patch checking queue %v", prID, err)
diff --git a/services/pull/pull.go b/services/pull/pull.go
index 5c0ea42d77525..088184ec089f7 100644
--- a/services/pull/pull.go
+++ b/services/pull/pull.go
@@ -402,7 +402,7 @@ func AddTestPullRequestTask(doer *user_model.User, repoID int64, branch string,
 					log.Error("UpdateCommitDivergence: %v", err)
 				}
 			}
-			AddToTaskQueue(ctx, pr)
+			AddToTaskQueueOnBaseUpdate(ctx, pr)
 		}
 	})
 }
